@page
@using UI.Pages.Shared
@model UI.Pages.IndexModel
@{
    ViewData["Title"] = "Home page";
}


<div class="flex px-40">
    <div class="w-1/2 overflow-hidden">
        @await Html.PartialAsync("HomePage/_Top10SellingProducts", Model.Top10SellingProducts)
    </div>


    <div class="w-1/2 overflow-hidden">
        @await Html.PartialAsync("HomePage/_Top10NewProducts", Model.Top10NewProducts)
    </div>
</div>


<h1 class="mb-4 mt-4 text-center text-5xl font-bold">Product List</h1>
@{
    var errorModel = new ErrorMessageModel
            {
                ErrorMessage = Model.ErrorMessage,
                ErrorDetail = Model.ErrorDetail
            };
}
@if (!string.IsNullOrEmpty(Model.ErrorMessage))
{
    <partial name="_ErrorMessage" model="errorModel" />
}



<div class="search-filter">
    <form method="get" class="flex space-x-4 items-center">
        <input class="border border-gray-300 rounded-md p-2" type="text" name="Name" placeholder="Search by name" value="@Request.Query["Name"]" onchange="this.form.submit();" />
        <select name="CategoryId" class="border border-gray-300 rounded-md p-2">
            <option value="">Select Category</option>
            @if (Model.Categories != null && Model.Categories.Any())
            {
                foreach (var category in Model.Categories)
                {
                    var isSelected = Request.Query["CategoryId"] == category.Id.ToString();
                    if (isSelected)
                    {
                        <option value="@category.Id" selected>@category.Name</option>
                    }
                    else
                    {
                        <option value="@category.Id">@category.Name</option>
                    }
                }
            }
        </select>
        @{
            var selectedStatus = Request.Query["Status"].ToString();
        }

        <select name="Status" class="border border-gray-300 rounded-md p-2">
            @if (string.IsNullOrEmpty(selectedStatus))
            {
                <option value="" selected>Select Status</option>
            }
            else
            {
                <option value="">Select Status</option>
            }

            @if (selectedStatus == "Available")
            {
                <option value="Available" selected>Available</option>
            }
            else
            {
                <option value="Available">Available</option>
            }

            @if (selectedStatus == "OutOfStock")
            {
                <option value="OutOfStock" selected>Out Of Stock</option>
            }
            else
            {
                <option value="OutOfStock">Out Of Stock</option>
            }
        </select>
        <input class="border border-gray-300 rounded-md p-2" type="number" name="MinRating" placeholder="Min Rating" min="0" max="5" value="@Request.Query["MinRating"]" />

        <div class="flex items-center space-x-4">
            <label class="flex items-center">
                <input type="radio" id="sortByPrice" name="SortOption" value="SortByPrice"
                @(Request.Query["SortOption"] == "SortByPrice" ? "checked" : "") onchange="this.form.submit();" />
                <span class="ml-2">Sort by Price</span>
            </label>

            <label class="flex items-center">
                <input type="radio" id="sortByRating" name="SortOption" value="SortByRating"
                @(Request.Query["SortOption"] == "SortByRating" ? "checked" : "") onchange="this.form.submit();" />
                <span class="ml-2">Sort by Rating</span>
            </label>
        </div>



        <label class="flex items-center">
            <span class="mr-2">Sort Descending:</span>
            <input type="checkbox" name="sortDescending" value="true"
            @(Request.Query["SortDescending"] == "true" ? "checked" : "") onchange="this.form.submit();" />
        </label>

        <button type="submit" class="bg-blue-500 text-white py-2 px-4 rounded-md hover:bg-blue-600">Search</button>
    </form>
</div>

<!-- Product List -->
@if (Model.Products != null && Model.Products.Any())
{
    <div class="py-16">
        <div class="container mx-auto px-4">
            <h2 class="text-3xl font-bold mb-8">Introducing Our Latest Products</h2>

            <!-- Responsive Grid Layout: 1 column on mobile, 2 columns on small screens, 4 columns on larger screens -->
            <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-8">
                @foreach (var product in Model.Products)
                {
                    <div class="bg-white rounded-lg shadow-lg p-6">
                        <div class="relative overflow-hidden h-48">
                            <img class="object-cover w-full h-full" src="@product.ProductImageUrl" alt="@product.Name" />
                            <div class="absolute inset-0 bg-black opacity-40"></div>
                            <div class="absolute inset-0 flex items-center justify-center">
                                <button class="bg-white text-gray-900 py-2 px-6 rounded-full font-bold hover:bg-gray-300" onclick="viewProduct('@product.Id')">View Product</button>
                            </div>
                        </div>
                        <h3 class="text-xl font-bold text-gray-900 mt-4">@product.Name</h3>
                        <p class="text-gray-500 text-sm mt-2">@product.Description</p>
                        <div class="flex items-center justify-between mt-4">
                            <span class="text-gray-900 font-bold text-lg">$@product.LowestPrice</span>
                            <button class="bg-gray-900 text-white py-2 px-4 rounded-full font-bold hover:bg-gray-800">Add to Cart</button>
                        </div>
                        <div class="text-sm text-gray-500 mt-2">Rating: @product.Rating | Status: @product.Status</div>
                    </div>
                }
            </div>
        </div>
    </div>
}
else
{
    <p>No products found matching your criteria.</p>
}

<script>
    document.getElementById('sortByPrice').addEventListener('change', function () {
        if (this.checked) {
            document.getElementById('sortByRating').checked = false;
        }
    });

    document.getElementById('sortByRating').addEventListener('change', function () {
        if (this.checked) {
            document.getElementById('sortByPrice').checked = false;
        }
    });
</script>
<script>
    function viewProduct(productId) {
        window.location.href = `/ProductDetail/ProductDetail?id=${productId}`;
    }
</script>
@{
    var paginationModel = new UI.Pages.Shared.PaginationModel
            {
                PageNumber = Model.PageNumber,
                PageSize = Model.PageSize,
                CurrentFilter = Model.CurrentFilters,
                HasNextPage = Model.HasNextPage
            };
}

<partial name="~/Pages/Shared/_Pagination.cshtml" model="paginationModel" />
