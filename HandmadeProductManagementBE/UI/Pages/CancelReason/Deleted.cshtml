@page
@model UI.Pages.CancelReasons.DeletedModel
@{
    ViewData["Title"] = "Deleted Cancel Reasons";
    var token = HttpContext.Session.GetString("Token");
}
@using HandmadeProductManagement.Core.Common
<script>
    const apiBaseUrl = '@Constants.ApiBaseUrl';
    var tokenFromRazor = '@token';

    // Kiểm tra nếu token tồn tại và lưu vào localStorage
    if (tokenFromRazor) {
        localStorage.setItem('authToken', tokenFromRazor);
    } else {
        console.log("Token không tồn tại.");
    }
    const authToken = localStorage.getItem('authToken');
    const requestVerificationToken = document.querySelector('input[name="__RequestVerificationToken"]').value;
</script>

<h1 class="mb-6 text-center text-3xl font-bold">Deleted Cancel Reasons</h1>

<!-- Return Button -->
<div class="mb-4">
    <a href="/CancelReason" class="rounded bg-blue-500 px-4 py-2 font-bold text-white hover:bg-blue-700">Return</a>
</div>

<div class="overflow-x-auto">
    <table class="min-w-full rounded-lg bg-white shadow-md">
        <thead>
            <tr class="bg-gray-200 text-sm uppercase leading-normal text-gray-600">
                <th class="px-6 py-3 text-left">#</th>
                <th class="px-6 py-3 text-left">Name</th>
                <th class="px-6 py-3 text-left">Description</th>
                <th class="px-6 py-3 text-left">Actions</th>
            </tr>
        </thead>
        <tbody class="text-sm font-light text-gray-600">
            @for (int i = 0; i < Model.CancelReasons.Count; i++)
            {
                var cancelReason = Model.CancelReasons[i];
                <tr id="cancelReason-@cancelReason.Id" class="border-b border-gray-200 hover:bg-gray-100">
                    <td class="px-6 py-3 text-left">@((i + 1))</td>
                    <td class="px-6 py-3 text-left">@cancelReason.Description</td>
                    <td class="px-6 py-3 text-left">
                        <a onclick="restoreCancelReason('@cancelReason.Id')" class="rounded bg-green-500 px-3 py-1 text-xs font-bold text-white hover:bg-green-800">Restore</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<script>
    async function restoreCancelReason(id) {
        try {
            const response = await fetch(`${apiBaseUrl}/api/cancelreason/${id}/recover`, {
                method: 'PATCH',
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': `Bearer ${authToken}`,
                    'RequestVerificationToken': requestVerificationToken
                }
            });

            const result = await response.json();

            if (result.data) {
                location.reload();
            } else {
                alert(result.message);
            }
        } catch (error) {
            alert("An error occurred while trying to restore the cancel reason.");
        }
    }
</script>
